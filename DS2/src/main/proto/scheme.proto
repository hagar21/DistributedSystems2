syntax = "proto3";

option java_multiple_files = true;
option java_package = "generated";
option java_outer_classname = "CityProto";
option objc_class_prefix = "RTG";

// Interface exported by the server.
service UberService {

  // Accept a user's ride and save it in the DB.
  rpc PostRide(Ride) returns (Result) {}

  // Accept a user's request to join a ride and check if there is a relevant ride.
  rpc PostPathPlanningRequest(stream CustomerRequest) returns (stream Ride) {}

  // Accept a list of routs and return all rides that have same date and same src or dst.
  rpc GetExistingRides(stream Rout) returns (stream Ride) {}

  // Save customer request to db
  // If found a relevant ride, update it's current vacancies
  rpc UpdateRide(InsertCustomerRequestToDb) returns (Result) {}

  // Accept a user's ride and save it in the DB.
  rpc InsertRideToDb(Ride) returns (Result) {}
}

message Ride {
  int32 id = 1;
  string firstName = 2;
  string lastName = 3;
  int32 phoneNum = 4;
  string srcCity = 5;
  string dstCity = 6;
  string date = 7;
  int32 vacancies = 8;
  int32 pd = 9;
}

message CustomerRequest {
  int32 id = 1;
  string firstName = 2;
  string lastName = 3;
  int32 phoneNum = 4;
  string srcCity = 5;
  string dstCity = 6;
  string date = 7;
  int32 rideId = 8;
}

message Rout {
  string date = 1;
  string srcCity = 2;
  string dstCity = 3;
}

message Result {
  bool isSuccess = 1;
}

message InsertCustomerRequestToDb {
  CustomerRequest customerReq = 1;
  int32 rideId = 2;
  int32 vacancies = 3;
}