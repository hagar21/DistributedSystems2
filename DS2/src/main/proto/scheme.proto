syntax = "proto3";

option java_multiple_files = true;
option java_package = "generated";
option java_outer_classname = "CityProto";
option objc_class_prefix = "RTG";

import "google/protobuf/empty.proto";

service UberService {
  // Accept a user's ride and save it in the DB.
  rpc PostRide(Ride) returns (Result) {}

  // Accept a handled customer request and save it in the DB.
  rpc PostCustomerRequest(CustomerRequest) returns (Result) {}

  // Accept a user's request to join a ride and check if there are relevant rides.
  rpc PostPathPlanningRequest(CustomerRequest) returns (stream Ride) {}

  // Accept a user's request from other city
  // return a compatible ride and update it in local db if found, otherwise noRide.
  rpc ReserveRide(Rout) returns (Ride) {}

  // if part of the path couldn't be satisfied revert intermediate commits
  rpc RevertCommit(Ride) returns (Result);

  // Returns all Rides in the database
  rpc Snapshot(google.protobuf.Empty) returns (google.protobuf.Empty) {}

  // Add shard as a CityClient of LB
  rpc AddCityClient(ShardClient) returns (google.protobuf.Empty) {}

  // City request Ride from different city
  rpc CityRequestRide(CityRequest) returns (Ride) {}

  // City revert request Ride from different city
  rpc CityRevertRequestRide(CityRevertRequest) returns (google.protobuf.Empty) {}
}

message Ride {
  string id = 1;
  string firstName = 2;
  string lastName = 3;
  string phoneNum = 4;
  string srcCity = 5;
  string dstCity = 6;
  string date = 7;
  int32 offeredPlaces = 8;
  int32 takenPlaces = 9;
  int32 pd = 10;
  repeated string customers = 11;
  bool prepare = 12; //default = false
  bool commit = 13; //default = false
}

message CustomerRequest {
  string id = 1;
  string name = 2;
  repeated string path = 3;
  string date = 4;
  repeated Ride rides = 5;
  bool prepare = 6; //default = false
  bool commit = 7; //default = false
}

message Rout {
  string name = 1;
  string date = 2;
  string srcCity = 3;
  string dstCity = 4;
}

message Result {
  bool isSuccess = 1;
}

message CityRequest {
  string destCityName = 1;
  Rout rout = 2;
}

message CityRevertRequest {
  string destCityName = 1;
  Ride ride = 2;
}

message ShardClient {
  string shard = 1;
  string targetHost = 2;
}